FBYTE_MANTISSA_OFFSET = 0
FBYTE_MANTISSA_SIZE = 3
FBYTE_EXPONENT_OFFSET = FBYTE_MANTISSA_OFFSET + FBYTE_MANTISSA_SIZE
FBYTE_EXPONENT_SIZE = 5


FBYTE_MANTISSA_MASK = ((1 << FBYTE_MANTISSA_SIZE) - 1) << FBYTE_MANTISSA_OFFSET
FBYTE_EXPONENT_MASK = ((1 << FBYTE_EXPONENT_SIZE) - 1) << FBYTE_EXPONENT_OFFSET


def decode_fbyte(byt: int):
	mantissa = (byt & FBYTE_MANTISSA_MASK) >> FBYTE_MANTISSA_OFFSET
	exponent = (byt & FBYTE_EXPONENT_MASK) >> FBYTE_EXPONENT_OFFSET

	if exponent == 0:
		return mantissa
	else:
		return ((1 << FBYTE_MANTISSA_SIZE) | mantissa) << (exponent - 1)
